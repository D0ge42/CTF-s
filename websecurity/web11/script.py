#!/usr/bin/env python3

# CSRF (Cross-site request forgery),also known as XSRF
# Is a web security vulnerability that allows an attack to trick a user into performing actions on a website without their knowledge or consent.
# Essentially an attack can use social engineering or other methods to make a user's browser execute malicious requests on a trusted website, where the user is already logged in.
# CSRF can be mitigated through the use of CSRF tokens, which are unique, random values generated by the server and included in requests to verify their authenticity.
# In this particular CTF we'll first get cookies stored into the session variable, thanks to the Session class.
# Cookies are needed because this way we can impersonate the user.
# Once cookies are stored, we're gonna make 4 get requests in this case, inserting an index and a csrf token directly in the URL.
# The request will be made by using the session class, which as we said before, stores also cookies.
# After we make one request, we gotta make sure we change the csrf token to a new one.

#"A user who is authenticated by a cookie saved in the user's web browser could unknowingly send an HTTP request to a site that trusts the user and thereby cause an unwanted action."

# Whats a CSRF Token? Its a token generated by a server-side application and provided to the client(user's browser). It is used to prevent CSRF attacks, which occur when a malicious website
# tricks a user into performing actions on a trusted website without their knowledge.

# TL:DR; By saving cookies, we send posts requests and get back a csrf token. We'll use this token to make trusted get calls to a website and get the flag  pieces.

import requests
from requests.sessions import Session

def main():
    s = requests.Session()
    url = "http://web-11.challs.olicyber.it/login"
    payload = {"username":"admin","password":"admin"}
    csrf = get_csrf_token(s,url,payload)
    print(f"crsf = {csrf}")
    flag_pieces = []
    for i in range(4):
        r = s.get(f'http://web-11.challs.olicyber.it/flag_piece?index={i}&csrf={csrf}')
        csrf = get_csrf_token(s,url,payload)
        flag_piece = r.json()['flag_piece']
        flag_pieces.append(flag_piece)

    flag = ''.join(flag_pieces)
    print(flag)

def get_csrf_token(s:Session,url:str,payload:dict)->str:
    session = s.post(url,json=payload)
    json_data = session.json()
    return json_data['csrf']

if __name__ == "__main__":
    main()
